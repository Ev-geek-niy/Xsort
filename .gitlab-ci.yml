stages:
  - build
  - release

variables:
  BUILD_DIR: "out"
  PROJECT_PATH: "Xsort.WPF/Xsort.WPF.csproj"
  DOTNET_VERSION: "8.0"
  RUNTIME: "win-x64"

before_script:
  - mkdir -p Xsort/Xsort.WPF
  - echo $APPSETTINGS_JSON > /builds/csharp-projects8840208/Xsort/Xsort.WPF/appsettings.json
  - cat /builds/csharp-projects8840208/Xsort/Xsort.WPF/appsettings.json


build:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:$DOTNET_VERSION
  script:
  - echo "Building application..."
  - |
    dotnet publish $PROJECT_PATH -o $BUILD_DIR -c Release -r $RUNTIME 
    -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true
    -p:IncludeAllContentForSelfExtract=true -p:PublishReadyToRun=true
    -p:DebugSymbols=false --no-self-contained
    - echo "Build completed."

  artifacts:
    paths:
      - $BUILD_DIR/
    expire_in: 1 week

# release:
#   stage: release
#   image: mcr.microsoft.com/dotnet/sdk:$DOTNET_VERSION
#   script:
#     - echo "Creating Git tag..."
#     - export VERSION=$(date +'%Y.%m.%d')  # Или другая логика версионирования
#     - git tag "v$VERSION"
#     - git push origin "v$VERSION"
#     - echo "Creating release..."
#     - curl --request POST --header "PRIVATE-TOKEN: $GITLAB_API_TOKEN" \
#         --data "tag_name=v$VERSION&name=Release v$VERSION&description=New release" \
#         "$CI_API_V4_URL/projects/$CI_PROJECT_ID/releases"

#   dependencies:
#     - build
#   only:
#     - main
